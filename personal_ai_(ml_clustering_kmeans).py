# -*- coding: utf-8 -*-
"""Personal: AI (ML Clustering: KMeans).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14dt8ycW_Zzi9Tbtw040zyF2vF_EMmc-t
"""

# K-Means Clustering
# Best Accuracy: 4 Clusters

# Imports
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import csv

# Data
# Clustering generally focuses on two values
# Focus on: Quantity Bought (3) and Unit Price (5)

dataFile = pd.read_csv("//content//drive//MyDrive//Coding//Personal Projects//1: Artificial Intelligence//Resources//RFMRetailClustering.csv", encoding = "unicode-escape")
print(dataFile.head())
data = dataFile.iloc[:,[3, 5]].values

# Determine Optimal Number of Clusters
# Optimaal = Low Intertia, Low # Clusters
# Optimal = 4
accuracy = []
for i in range(1, 8):
  kmeans = KMeans(n_clusters = i, random_state = 0)
  kmeans.fit(data)
  accuracy.append(kmeans.inertia_)

print(accuracy)
plt.plot(range(1, 8), accuracy)
plt.show()

# Display Data
kmeans = KMeans(n_clusters = 4, init = 'k-means++', random_state = 42)
y_kmeans = kmeans.fit_predict(data)
y_kmeans = np.array(y_kmeans)
data = np.array(data)

plt.scatter(data[y_kmeans == 0, 0], data[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')
plt.scatter(data[y_kmeans == 1, 0], data[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')
plt.scatter(data[y_kmeans == 2, 0], data[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')
plt.scatter(data[y_kmeans == 3, 0], data[y_kmeans == 3, 1], s = 100, c = 'purple', label = 'Cluster 4')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 70, c = 'yellow', label = 'Centroids')
plt.legend()
plt.show()